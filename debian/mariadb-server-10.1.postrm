#!/bin/bash -e

. /usr/share/debconf/confmodule

if [ -n "$DEBIAN_SCRIPT_DEBUG" ]; then set -v -x; DEBIAN_SCRIPT_TRACE=1; fi
${DEBIAN_SCRIPT_TRACE:+ echo "#42#DEBUG# RUNNING $0 $*" 1>&2 }

# Do we (offer to) do a full purge, or is there another mysql server
# present?  This includes within it a check for "$1" = purge.
fullpurge=no
if [ "$1" = purge ]; then
  if [ ! \( -x /usr/sbin/mysqld -o -L /usr/sbin/mysqld \) ]; then
    fullpurge=yes
  elif [ -x /usr/sbin/mysqld ]; then
    # Does this /usr/sbin/mysqld belong to our server-core package?
    # If so, we can offer to do a full purge, otherwise we do not.

    # Use the DPKG_MAINTSCRIPT_PACKAGE to avoid hardcoding the package
    # name; this reduces the chances of future errors creeping in.
    # If we're being run outside of a dpkg run, then this is safe.
    package=${DPKG_MAINTSCRIPT_PACKAGE}
    corepackage=$(echo "$package" | sed -e 's/server-/server-core-/')
    daemonpackage=$(dpkg-query -S /usr/sbin/mysqld 2>/dev/null | cut -d: -f1)
    if [ "$corepackage" = "$daemonpackage" -a -n "$corepackage" ]; then
      fullpurge=yes
    fi
  fi
fi

case "$1" in
  purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    # We handle purge actions below.  The server has already been stopped
    # if necessary by the prerm.
  ;;
  *)
    echo "postrm called with unknown argument '$1'" 1>&2
    exit 1
  ;;
esac

#
# - Do NOT purge logs or data if another mysql-server* package is installed (#307473)
# - Remove the mysql user only after all his owned files are purged.
#
if [ $fullpurge = yes ]; then
  # we remove the mysql user only after all his owned files are purged
  rm -f /var/log/mysql.{log,err}{,.0,.[1234567].gz}
  rm -rf /var/log/mysql

  db_input high mariadb-server-10.1/postrm_remove_databases || true
  db_go || true
  db_get mariadb-server-10.1/postrm_remove_databases || true
  if [ "$RET" = "true" ]; then
    # never remove the debian.cnf when the databases are still existing
    # else we ran into big trouble on the next install!
    rm -f /etc/mysql/debian.cnf
    # Remove all contents from /var/lib/mysql except if it's a
    # directory with file system data. See #829491 for details and
    # #608938 for potential mysql-server leftovers which erroneously
    # had been renamed.
    # Attempt removal only if the directory hasn't already been removed
    # by dpkg to avoid failing on "No such file or directory" errors.
    if [ -d /var/lib/mysql ]
    then
      find /var/lib/mysql -mindepth 1 \
           -not -path '*/lost+found/*'     -not -name 'lost+found' \
           -not -path '*/lost@002bfound/*' -not -name 'lost@002bfound' \
           -delete

      # "|| true" still needed as rmdir still exits with non-zero if
      # /var/lib/mysql is a mount point
      rmdir --ignore-fail-on-non-empty /var/lib/mysql || true
    fi
    rm -rf /var/run/mysqld # this directory is created by the init script, don't leave behind
    # These are possible leftovers from removed or purged mysql-server-5.* packages
    rm -rf /var/lib/mysql-files
    rm -rf /var/lib/mysql-keyring
    userdel mysql || true
  fi

  # The following would have been automatically added by dh_installinit
  # It is placed here to ensure that it is only run when there is no other
  # mysql server package running.  (See #852495)
  update-rc.d mysql remove >/dev/null

  # The following is automatically added by dh_systemd_enable to the mysql-*
  # postrm, but is not run if another mysql-server is installed.  So we run
  # it here in case we are the last mysql package to be purged.
  if [ -x "/usr/bin/deb-systemd-helper" ]; then
	deb-systemd-helper purge mysql.service >/dev/null
	deb-systemd-helper unmask mysql.service >/dev/null
  fi
fi

# The following would have been automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
    . /usr/share/debconf/confmodule
    db_purge
fi

# The following would have been automatically added by dh_installinit
# and is safe to run in any event
# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [ -d /run/systemd/system ] ; then
  systemctl --system daemon-reload >/dev/null || true
fi
# End what would have been automatically added by dh_installinit
  
exit 0

# We add the debhelper snippets here, after the exit 0, so that they can
# be visually checked in the future to ensure that nothing has been left
# out above.

#DEBHELPER#
